name: Deploy PubSub + Kafka + RabbiMQ with Terraform and Ansible
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev, prod)"
        required: true
        default: dev

permissions:
  contents: read
  id-token: write

jobs:
  security-github-actions:
    name: Security SSH Key
    runs-on: ubuntu-latest
    outputs:
      ssh_public_key: ${{ steps.generate_ssh_key.outputs.ssh_public_key }}
      ssh_private_key_b64: ${{ steps.generate_ssh_key.outputs.ssh_private_key_b64 }}
    steps:
      - name: Generar clave SSH temporal
        id: generate_ssh_key
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N "" -C "gha@runner"

          # Exportar clave pÃºblica
          echo "ssh_public_key=$(cat ~/.ssh/id_rsa.pub)" >> $GITHUB_OUTPUT

          # Exportar clave privada codificada en base64
          PRIVATE_KEY_B64=$(base64 -w 0 ~/.ssh/id_rsa)
          echo "ssh_private_key_b64=$PRIVATE_KEY_B64" >> $GITHUB_OUTPUT

      - name: Verificar variable ssh_public_key
        run: |
          echo "${{ steps.generate_ssh_key.outputs.ssh_public_key }}"

      - name: Verificar variable ssh_private_key
        run: |
          echo "${{ steps.generate_ssh_key.outputs.ssh_private_key }}"

###############################
  Deploy-PubSub:
    name: Terraform Apply PubSub
    runs-on: ubuntu-latest
    needs: security-github-actions
    environment:
      name: Development
    defaults:
      run:
        shell: bash
        working-directory: terraform/envs/${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Verify GCP secret is available
        run: |
          if [ -z "${{ secrets.GCP_CREDENTIALS }}" ]; then
            echo "Secret missing!"
            exit 1
          else
            echo "Secret available"
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          export_environment_variables: true
###############################
  Create-Kafka-VM:
    name: Terraform Apply Kafka VM
    runs-on: ubuntu-latest
    needs: security-github-actions
    environment:
      name: Development
    defaults:
      run:
        shell: bash
        working-directory: terraform/envs/${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  Create-RabbitMQ-VM:
    name: Terraform Apply RabbitMQ VM
    runs-on: ubuntu-latest
    needs: security-github-actions
    environment:
      name: Development
    
    defaults:
      run:
        shell: bash
        working-directory: terraform/envs/${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
